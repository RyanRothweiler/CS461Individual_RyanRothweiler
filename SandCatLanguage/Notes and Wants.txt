---
GOALS

This is what I need before I can start selling something.
- I need playable games in a web browser as proof that this is worth buying.
	- Games needed. 
		- Threes
		- A simple rogue like game
	- Games maybe needed?
		- Caverna worker placement mechchanic.
		- Scythe action board mechanic.
		- Puerto Rico role selection.
		- The Witness
- A workable syntax with a workable language spec. Subject to lots of change, and it will change, but something workable.
- I must be able to prototype a few game ideas.

---


---
Need some way to specify 'macros'. I'm being forced to retype lots of the same concepts. They could be packaged into reusable pieces.

This...
	event(GoToCostco) - false(HasGas), true(CarAtCostco), false(CarAtHome), false(CarAtBlockbuster) : true(HasGas), false(CarAtCostco).
	event(GoToBlockbuster) - false(HasGas), true(CarAtBlockbuster), false(CarAtCostco) : true(HasGas), false(CarAtBlockbuster).
has a lot of repetition. Need something like MoveCar(CarAtCostco).
Possibly something mutualy exclusive? Car entity which can only be at one location at a time

Methods? Something like
	method(MoveCar) [LOCATION] ??????
No, that won't work. Need some way to say 'CAR can only have ONE LOCATION'
---


---
Rename events. They're actually available player moves. 
Need a way to specify in game logic which is not a player move. 
---


---
SYNTAX RULES
(These are all probably temporary, but they are the current state)

- true(TITLE(VALUE))
	Values in fluents must be whole numbers. In the above, Value must be a whole number.
- Events must have a period at the end.
- Whole program must end with a period.
- Arithmetic requires spaces between operands and operators
- No arithmetic allowed in conditionals
- bind(EVENT KEY)
- Must be spaces on both sides of grouping with '[ ]'
---


---
TODO
- Randomness.
- Output helpful errors when syntax of sc file is incorrect
- Arithmetic which supports negative numbers
- Add in roles again. Need a multiplayer game to test this
- Remove all dependence on white space. (Or atleast make it a consistent dependence)
- Remove the conditional reserved word, the conditionals should automatically be parsed without the word. 
- Automatic reloading of the rules. Will need something to throw syntax errors first. Right now it will just crash.
- Binding multiple events to a key



DONE
- Fluents with values.
	- Events can modify fluents values.
	- Add boolean values to fluents. Fluents should not
	- Fluents can have values.
- Finish conditionals. Need <= >= 
- Comments.
---


---
Test Games and thoughts

Xedoc.sc
	- Needs object system. Need to say, this is a card, it has atk and def. Can create instance of the cards.

ShieldPush.sc
	- Needs conditional inheritance. 
---