! This defines each gridcell 
! plant 0 - no plant 1..3 - plant id
! 0..2 - color id

CellA, CellB, CellC, CellD, CellE, CellF, CellG, CellH, CellI, CellJ, CellK, CellL, CellM, CellN, CellO, CellP, CellQ, CellR, CellS, CellT, CellU, CellV, CellW, CellX, CellY : [Plant(0), Color(0), X(0), Y(0)].

CellA'X(0).
CellA'Y(0).

CellB'X(1).
CellB'Y(0).

CellC'X(2).
CellC'Y(0).

CellD'X(3).
CellD'Y(0).

CellE'X(4).
CellE'Y(0).

CellF'X(0).
CellF'Y(1).

CellG'X(1).
CellG'Y(1).

CellH'X(2).
CellH'Y(1).

CellI'X(3).
CellI'Y(1).

CellJ'X(4).
CellJ'Y(1).

CellK'X(0).
CellK'Y(2).

CellL'X(1).
CellL'Y(2).

CellM'X(2).
CellM'Y(2).

CellN'X(3).
CellN'Y(2).

CellO'X(4).
CellO'Y(2).

CellP'X(0).
CellP'Y(3).

CellQ'X(1).
CellQ'Y(3).

CellR'X(2).
CellR'Y(3).

CellS'X(3).
CellS'Y(3).

CellT'X(4).
CellT'Y(3).

CellU'X(0).
CellU'Y(4).

CellV'X(1).
CellV'Y(4).

CellW'X(2).
CellW'Y(4).

CellX'X(3).
CellX'Y(4).

CellY'X(4).
CellY'Y(4).

! Holds the queue of plants for the player
! 0..2 - plant id, 
! 10 harvest action
StepOne(2).
StepTwo(3).
StepThree(2).
StepFour(10).
StepFive(100).

Score(0).

method AdvanceStep
	does StepOne(StepTwo), StepTwo(StepThree), StepThree(StepFour), StepFour(StepFive), RefillActions{}.

method RefillActions
	does StepOne(2), StepTwo(3), StepThree(2), StepFour(10)
	if StepOne = 100.

method PlacePlant
	using Cell
	does Harvest{Cell, Cell'Plant} if StepOne = 10
	does Cell'Plant(StepOne) if not StepOne = 10
	does AdvanceStep{}.

method HarvestIfAdj
	using Source, Dest
	does Harvest{Dest, Source'Plant} if (Source'X - 1 = Dest'X and Dest'Y = Dest'Y).

method Harvest
	using Origin, TypeHarvesting
	does Score(Score + 1), Origin'Plant = 0, HarvestIfAdj{Origin, CellA}, HarvestIfAdj{Cell, CellF}
	if Origin'Plant = TypeHarvesting.


action(PlantCellA) does PlacePlant{CellA}.
action(PlantCellB) does PlacePlant{CellB}.
action(PlantCellC) does PlacePlant{CellC}.
action(PlantCellD) does PlacePlant{CellD}.
action(PlantCellE) does PlacePlant{CellE}.
action(PlantCellF) does PlacePlant{CellF}.
action(PlantCellG) does PlacePlant{CellG}.
action(PlantCellH) does PlacePlant{CellH}.
action(PlantCellI) does PlacePlant{CellI}.
action(PlantCellJ) does PlacePlant{CellJ}.
action(PlantCellK) does PlacePlant{CellK}.
action(PlantCellL) does PlacePlant{CellL}.
action(PlantCellM) does PlacePlant{CellM}.
action(PlantCellN) does PlacePlant{CellN}.
action(PlantCellO) does PlacePlant{CellO}.
action(PlantCellP) does PlacePlant{CellP}.
action(PlantCellQ) does PlacePlant{CellQ}.
action(PlantCellR) does PlacePlant{CellR}.
action(PlantCellS) does PlacePlant{CellS}.
action(PlantCellT) does PlacePlant{CellT}.
action(PlantCellU) does PlacePlant{CellU}.
action(PlantCellV) does PlacePlant{CellV}.
action(PlantCellW) does PlacePlant{CellW}.
action(PlantCellX) does PlacePlant{CellX}.
action(PlantCellY) does PlacePlant{CellY}.